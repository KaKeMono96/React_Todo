// react component chrome extension => react developer tools

<li className="todo-item-container">
            <div className="todo-item">
              <input type="checkbox" />
              <span className="todo-item-label">Finish React Series</span>
              {/* <input type="text" className="todo-item-input" value="Finish React Series" /> */}
            </div>
            <button className="x-button">
              <svg
                className="x-button-icon"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth={2}
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </button>
          </li>


          <li className="todo-item-container">
            <div className="todo-item">
              <input type="checkbox" />
              <span className="todo-item-label">Do other thing</span>
              {/* <input type="text" className="todo-item-input" value="Do other thing /> */}
            </div>
            <button className="x-button">
              <svg
                className="x-button-icon"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth={2}
                  d="M6 18L18 6M6 6l12 12"
                />
              </svg>
            </button>
          </li>


//update data at server side
Using the fetch api

 //update data at server side
    fetch('http://localhost:3001/todos',{
      method : "POST",
      headers : {
        'Content-Type' : 'application/json'
      },
      body : JSON.stringify(todo)
    })
    //update data at client side
    setTodos(preveState => [...preveState,todo])

    delete

     let deleteTodo = (todoId) => {
    //server
    fetch(` http://localhost:3001/todos/${todoId} `,{
      method : "DELETE"
    })
    //client
    setTodos(preveState => {
      return preveState.filter(todo => {
        return todo.id !== todoId
      }); //[todo, todo]
    })
  }


   let addTodo = (todo) => {
    fetch('http://localhost:3001/todos',{
      method : "POST",
      headers : {
        'Content-Type' : 'application/json'
      },
      body : JSON.stringify(todo)
    })
    setTodos(preveState => [...preveState,todo])
  }

  let deleteTodo = (todoId) => {
    fetch(` http://localhost:3001/todos/${todoId} `,{
      method : "DELETE"
    })
    setTodos(preveState => {
      return preveState.filter(todo => {
        return todo.id !== todoId
      }); //[todo, todo]
    })
  }